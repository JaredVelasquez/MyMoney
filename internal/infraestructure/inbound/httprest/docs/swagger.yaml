basePath: /
definitions:
  api.ChangePasswordRequest:
    properties:
      current_password:
        type: string
      new_password:
        minLength: 6
        type: string
    required:
    - current_password
    - new_password
    type: object
  api.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  api.LoginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  api.RefreshTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  api.RefreshTokenResponse:
    properties:
      access_token:
        type: string
    type: object
  api.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  api.UpdateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
    required:
    - email
    - name
    type: object
  api.UserResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  domain.Category:
    properties:
      color:
        type: string
      created_at:
        type: string
      description:
        type: string
      icon:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  domain.CreateCategoryRequest:
    properties:
      color:
        type: string
      description:
        type: string
      icon:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  domain.CreateCurrencyRequest:
    properties:
      code:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      symbol:
        type: string
    required:
    - code
    - name
    - symbol
    type: object
  domain.CreatePaymentMethodRequest:
    properties:
      description:
        type: string
      name:
        type: string
    required:
    - name
    type: object
  domain.CreatePlanRequest:
    properties:
      currency_id:
        type: string
      description:
        type: string
      features:
        items:
          $ref: '#/definitions/domain.PlanFeatureRequest'
        type: array
      interval:
        type: string
      is_active:
        type: boolean
      is_public:
        type: boolean
      name:
        type: string
      price:
        type: number
      sort_order:
        type: integer
    required:
    - currency_id
    - description
    - interval
    - name
    type: object
  domain.CreateSubscriptionRequest:
    properties:
      end_date:
        type: string
      metadata:
        additionalProperties:
          type: string
        type: object
      payment_method_id:
        type: string
      plan_id:
        type: string
      start_date:
        type: string
    required:
    - plan_id
    type: object
  domain.CreateTransactionRequest:
    properties:
      amount:
        type: number
      category_id:
        type: string
      currency_id:
        type: string
      date:
        type: string
      description:
        type: string
      payment_method_id:
        type: string
      type:
        $ref: '#/definitions/domain.TransactionType'
    required:
    - amount
    - category_id
    - currency_id
    - date
    - type
    type: object
  domain.CurrencyResponse:
    properties:
      code:
        type: string
      created_at:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      symbol:
        type: string
      updated_at:
        type: string
    type: object
  domain.PaymentMethod:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  domain.PlanFeatureRequest:
    properties:
      description:
        type: string
      included:
        type: boolean
      name:
        type: string
      value:
        type: string
    type: object
  domain.PlanFeatureResponse:
    properties:
      description:
        type: string
      included:
        type: boolean
      name:
        type: string
      value:
        type: string
    type: object
  domain.PlanResponse:
    properties:
      created_at:
        type: string
      currency_id:
        type: string
      description:
        type: string
      features:
        items:
          $ref: '#/definitions/domain.PlanFeatureResponse'
        type: array
      id:
        type: string
      interval:
        type: string
      is_active:
        type: boolean
      is_public:
        type: boolean
      name:
        type: string
      price:
        type: number
      sort_order:
        type: integer
      updated_at:
        type: string
    type: object
  domain.SubscriptionResponse:
    properties:
      cancellation_date:
        type: string
      created_at:
        type: string
      end_date:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      last_payment_date:
        type: string
      metadata:
        additionalProperties:
          type: string
        type: object
      next_payment_attempt:
        type: string
      payment_method_id:
        type: string
      plan_id:
        type: string
      renewal_date:
        type: string
      start_date:
        type: string
      status:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  domain.Transaction:
    properties:
      amount:
        type: number
      category_id:
        type: string
      created_at:
        type: string
      currency_id:
        type: string
      date:
        type: string
      description:
        type: string
      id:
        type: string
      payment_method_id:
        type: string
      type:
        $ref: '#/definitions/domain.TransactionType'
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  domain.TransactionType:
    enum:
    - INCOME
    - EXPENSE
    type: string
    x-enum-varnames:
    - TransactionTypeIncome
    - TransactionTypeExpense
  domain.UpdateCategoryRequest:
    properties:
      color:
        type: string
      description:
        type: string
      icon:
        type: string
      name:
        type: string
    type: object
  domain.UpdateCurrencyRequest:
    properties:
      code:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      symbol:
        type: string
    required:
    - code
    - name
    - symbol
    type: object
  domain.UpdatePaymentMethodRequest:
    properties:
      description:
        type: string
      is_active:
        type: boolean
      name:
        type: string
    type: object
  domain.UpdatePlanRequest:
    properties:
      currency_id:
        type: string
      description:
        type: string
      features:
        items:
          $ref: '#/definitions/domain.PlanFeatureRequest'
        type: array
      interval:
        type: string
      is_active:
        type: boolean
      is_public:
        type: boolean
      name:
        type: string
      price:
        type: number
      sort_order:
        type: integer
    required:
    - currency_id
    - description
    - interval
    - name
    type: object
  domain.UpdateTransactionRequest:
    properties:
      amount:
        type: number
      category_id:
        type: string
      currency_id:
        type: string
      date:
        type: string
      description:
        type: string
      payment_method_id:
        type: string
      type:
        $ref: '#/definitions/domain.TransactionType'
    type: object
  health.HealthResponse:
    properties:
      environment:
        type: string
      guid:
        type: string
      info:
        $ref: '#/definitions/health.InfoData'
      status:
        type: string
      timestamp:
        type: string
      version:
        type: string
    type: object
  health.InfoData:
    properties:
      databaseOK:
        type: boolean
      goVersion:
        type: string
      uptime:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@mymoney.com
    name: API Support
    url: http://www.mymoney.com/support
  description: API para la aplicaci√≥n de finanzas personales
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: MyMoney Backend API
  version: "1.0"
paths:
  /admin/subscriptions:
    get:
      consumes:
      - application/json
      description: Retorna todas las suscripciones (solo para administradores)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.SubscriptionResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Obtener todas las suscripciones
      tags:
      - subscriptions
  /admin/subscriptions/status/{status}:
    get:
      consumes:
      - application/json
      description: Retorna las suscripciones filtradas por estado (solo para administradores)
      parameters:
      - description: Estado de suscripci√≥n (active, expired, cancelled)
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.SubscriptionResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Obtener suscripciones por estado
      tags:
      - subscriptions
  /api/categories:
    get:
      description: Retorna todas las categor√≠as del usuario autenticado
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Category'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Obtener todas las categor√≠as del usuario
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Crea una nueva categor√≠a para el usuario autenticado
      parameters:
      - description: Datos de la categor√≠a a crear
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/domain.CreateCategoryRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Category'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Crear una nueva categor√≠a
      tags:
      - categories
  /api/categories/{id}:
    delete:
      description: Elimina una categor√≠a existente
      parameters:
      - description: ID de la categor√≠a
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Eliminar una categor√≠a
      tags:
      - categories
    get:
      description: Retorna una categor√≠a espec√≠fica por su ID
      parameters:
      - description: ID de la categor√≠a
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Category'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Obtener una categor√≠a espec√≠fica
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: Actualiza una categor√≠a existente
      parameters:
      - description: ID de la categor√≠a
        in: path
        name: id
        required: true
        type: string
      - description: Datos de la categor√≠a a actualizar
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Category'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Actualizar una categor√≠a
      tags:
      - categories
  /api/transactions:
    get:
      description: Retorna todas las transacciones del usuario autenticado
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Transaction'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Obtener todas las transacciones del usuario
      tags:
      - transactions
    post:
      consumes:
      - application/json
      description: Crea una nueva transacci√≥n para el usuario autenticado
      parameters:
      - description: Datos de la transacci√≥n a crear
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/domain.CreateTransactionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Transaction'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Crear una nueva transacci√≥n
      tags:
      - transactions
  /api/transactions/{id}:
    delete:
      description: Elimina una transacci√≥n existente
      parameters:
      - description: ID de la transacci√≥n
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Eliminar una transacci√≥n
      tags:
      - transactions
    get:
      description: Retorna una transacci√≥n espec√≠fica por su ID
      parameters:
      - description: ID de la transacci√≥n
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Transaction'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Obtener una transacci√≥n espec√≠fica
      tags:
      - transactions
    put:
      consumes:
      - application/json
      description: Actualiza una transacci√≥n existente
      parameters:
      - description: ID de la transacci√≥n
        in: path
        name: id
        required: true
        type: string
      - description: Datos de la transacci√≥n a actualizar
        in: body
        name: transaction
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Transaction'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Actualizar una transacci√≥n
      tags:
      - transactions
  /api/transactions/category/{categoryId}:
    get:
      description: Retorna todas las transacciones de una categor√≠a espec√≠fica
      parameters:
      - description: ID de la categor√≠a
        in: path
        name: categoryId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Transaction'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Obtener transacciones por categor√≠a
      tags:
      - transactions
  /api/transactions/date-range:
    get:
      description: Retorna todas las transacciones dentro de un rango de fechas
      parameters:
      - description: Fecha de inicio (formato YYYY-MM-DD)
        in: query
        name: start_date
        required: true
        type: string
      - description: Fecha de fin (formato YYYY-MM-DD)
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Transaction'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Obtener transacciones por rango de fechas
      tags:
      - transactions
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: Access credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/api.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login
      tags:
      - auth
  /auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Refreshes an access token using a refresh token
      parameters:
      - description: Refresh token
        in: body
        name: refreshToken
        required: true
        schema:
          $ref: '#/definitions/api.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.RefreshTokenResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registra un nuevo usuario en el sistema
      parameters:
      - description: Datos del usuario
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/api.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Registrar un nuevo usuario
      tags:
      - auth
  /currencies:
    get:
      consumes:
      - application/json
      description: Retorna una lista de todas las monedas disponibles en el sistema
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.CurrencyResponse'
            type: array
      summary: Obtener todas las monedas
      tags:
      - currencies
    post:
      consumes:
      - application/json
      description: Crea una nueva moneda con los datos proporcionados
      parameters:
      - description: Datos de la moneda
        in: body
        name: currency
        required: true
        schema:
          $ref: '#/definitions/domain.CreateCurrencyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.CurrencyResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Crear una nueva moneda
      tags:
      - currencies
  /currencies/{id}:
    delete:
      consumes:
      - application/json
      description: Elimina una moneda basado en su ID
      parameters:
      - description: ID de la moneda
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Eliminar una moneda
      tags:
      - currencies
    get:
      consumes:
      - application/json
      description: Retorna los detalles de una moneda basado en su ID
      parameters:
      - description: ID de la moneda
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.CurrencyResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtener una moneda por ID
      tags:
      - currencies
    put:
      consumes:
      - application/json
      description: Actualiza los datos de una moneda existente basado en su ID
      parameters:
      - description: ID de la moneda
        in: path
        name: id
        required: true
        type: string
      - description: Datos actualizados de la moneda
        in: body
        name: currency
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateCurrencyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.CurrencyResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Actualizar una moneda existente
      tags:
      - currencies
  /currencies/active:
    get:
      consumes:
      - application/json
      description: Retorna una lista de las monedas activas en el sistema
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.CurrencyResponse'
            type: array
      summary: Obtener monedas activas
      tags:
      - currencies
  /currencies/code/{code}:
    get:
      consumes:
      - application/json
      description: Retorna los detalles de una moneda basado en su c√≥digo
      parameters:
      - description: C√≥digo de la moneda
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.CurrencyResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtener una moneda por c√≥digo
      tags:
      - currencies
  /health:
    get:
      consumes:
      - application/json
      description: Returns the health status of the API and its dependencies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/health.HealthResponse'
      summary: Get API health status
      tags:
      - health
  /health/check:
    get:
      consumes:
      - application/json
      description: Simple health check that returns 200 OK if the API is running
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Quick health check endpoint
      tags:
      - health
  /payment-methods:
    get:
      consumes:
      - application/json
      description: Retorna todos los m√©todos de pago del usuario autenticado
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.PaymentMethod'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Obtener todos los m√©todos de pago
      tags:
      - payment-methods
    post:
      consumes:
      - application/json
      description: Crea un nuevo m√©todo de pago para el usuario autenticado
      parameters:
      - description: Datos del m√©todo de pago
        in: body
        name: method
        required: true
        schema:
          $ref: '#/definitions/domain.CreatePaymentMethodRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.PaymentMethod'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Crear un m√©todo de pago
      tags:
      - payment-methods
  /payment-methods/{id}:
    delete:
      consumes:
      - application/json
      description: Elimina un m√©todo de pago existente
      parameters:
      - description: ID del m√©todo de pago
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Eliminar un m√©todo de pago
      tags:
      - payment-methods
    get:
      consumes:
      - application/json
      description: Retorna los detalles de un m√©todo de pago espec√≠fico
      parameters:
      - description: ID del m√©todo de pago
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.PaymentMethod'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Obtener un m√©todo de pago por ID
      tags:
      - payment-methods
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un m√©todo de pago existente
      parameters:
      - description: ID del m√©todo de pago
        in: path
        name: id
        required: true
        type: string
      - description: Datos actualizados del m√©todo de pago
        in: body
        name: method
        required: true
        schema:
          $ref: '#/definitions/domain.UpdatePaymentMethodRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.PaymentMethod'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Actualizar un m√©todo de pago
      tags:
      - payment-methods
  /plans:
    get:
      consumes:
      - application/json
      description: Retorna una lista de todos los planes disponibles en el sistema
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.PlanResponse'
            type: array
      summary: Obtener todos los planes
      tags:
      - plans
    post:
      consumes:
      - application/json
      description: Crea un nuevo plan con los datos proporcionados
      parameters:
      - description: Datos del plan
        in: body
        name: plan
        required: true
        schema:
          $ref: '#/definitions/domain.CreatePlanRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.PlanResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Crear un nuevo plan
      tags:
      - plans
  /plans/{id}:
    delete:
      consumes:
      - application/json
      description: Elimina un plan basado en su ID
      parameters:
      - description: ID del plan
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Eliminar un plan
      tags:
      - plans
    get:
      consumes:
      - application/json
      description: Retorna los detalles de un plan basado en su ID
      parameters:
      - description: ID del plan
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.PlanResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtener un plan por ID
      tags:
      - plans
    put:
      consumes:
      - application/json
      description: Actualiza los datos de un plan existente basado en su ID
      parameters:
      - description: ID del plan
        in: path
        name: id
        required: true
        type: string
      - description: Datos actualizados del plan
        in: body
        name: plan
        required: true
        schema:
          $ref: '#/definitions/domain.UpdatePlanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.PlanResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Actualizar un plan existente
      tags:
      - plans
  /plans/active:
    get:
      consumes:
      - application/json
      description: Retorna una lista de los planes activos en el sistema
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.PlanResponse'
            type: array
      summary: Obtener planes activos
      tags:
      - plans
  /plans/public:
    get:
      consumes:
      - application/json
      description: Retorna una lista de los planes p√∫blicos disponibles en el sistema
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.PlanResponse'
            type: array
      summary: Obtener planes p√∫blicos
      tags:
      - plans
  /subscriptions:
    get:
      consumes:
      - application/json
      description: Retorna las suscripciones del usuario autenticado
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.SubscriptionResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Obtener suscripciones del usuario
      tags:
      - subscriptions
    post:
      consumes:
      - application/json
      description: Crea una nueva suscripci√≥n para el usuario autenticado
      parameters:
      - description: Datos de la suscripci√≥n
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/domain.CreateSubscriptionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.SubscriptionResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Crear una suscripci√≥n
      tags:
      - subscriptions
  /subscriptions/{id}:
    get:
      consumes:
      - application/json
      description: Retorna los detalles de una suscripci√≥n espec√≠fica
      parameters:
      - description: ID de la suscripci√≥n
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SubscriptionResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Obtener una suscripci√≥n
      tags:
      - subscriptions
  /subscriptions/{id}/cancel:
    put:
      consumes:
      - application/json
      description: Cancela una suscripci√≥n activa
      parameters:
      - description: ID de la suscripci√≥n
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SubscriptionResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Cancelar una suscripci√≥n
      tags:
      - subscriptions
  /subscriptions/{id}/renew:
    put:
      consumes:
      - application/json
      description: Renueva una suscripci√≥n expirada o cancelada
      parameters:
      - description: ID de la suscripci√≥n
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SubscriptionResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Renovar una suscripci√≥n
      tags:
      - subscriptions
  /users/change-password:
    put:
      consumes:
      - application/json
      description: Changes the authenticated user's password
      parameters:
      - description: Password data
        in: body
        name: passwordData
        required: true
        schema:
          $ref: '#/definitions/api.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Change password
      tags:
      - users
  /users/me:
    get:
      consumes:
      - application/json
      description: Retorna los datos del usuario autenticado
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.UserResponse'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Obtener usuario actual
      tags:
      - users
  /users/update:
    put:
      consumes:
      - application/json
      description: Updates the authenticated user's information
      parameters:
      - description: Updated user data
        in: body
        name: userData
        required: true
        schema:
          $ref: '#/definitions/api.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.UserResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Update user
      tags:
      - users
schemes:
- http
- https
securityDefinitions:
  Bearer:
    description: 'Ingrese el token con el prefijo Bearer, por ejemplo: ''Bearer abcde12345'''
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
